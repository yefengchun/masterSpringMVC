buildscript {
	ext {
		springBootVersion = '1.3.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
	}
}
	configurations {
		testCompile {
			exclude module: 'selenium-safari-driver'
			exclude module: 'selenium-ie-driver'
			exclude module: 'selenium-firefox-driver'
			exclude module: 'selenium-htmlunit-driver'
			exclude module: 'selenium-chrome-driver'
		}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

jar {
	baseName = 'masterSpringMVC'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile ('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile ('org.springframework.boot:spring-boot-starter-social-twitter')

	compile ('org.webjars:materializecss:0.96.0')
	compile ('org.webjars:jquery:2.1.4')
	compile('org.springframework.boot:spring-boot-configuration-processor')
	compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
	compile('com.fasterxml.jackson.dataformat:jackson-dataformat-xml')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile ('org.thymeleaf.extras:thymeleaf-extras-springsecurity3:3.0.0.RELEASE')
	compile ('org.springframework.boot:spring-boot-starter-redis')
	compile ('org.springframework.session:spring-session:1.0.1.RELEASE')
	compile('io.springfox:springfox-swagger2:2.1.2')
	compile('io.springfox:springfox-swagger-ui:2.1.2')
	testCompile ('org.fluentlenium:fluentlenium-assertj:0.10.3')
	testCompile ('com.codeborne:phantomjsdriver:1.2.1')
	testCompile ('org.seleniumhq.selenium:selenium-java:2.45.0')
	testCompile ('org.assertj:assertj-core:3.0.0')
	testCompile ('com.jayway.jsonpath:json-path')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
compileJava.dependsOn(processResources)

eclipse {
	classpath {
		containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}
task wrapper(type: Wrapper) {
	gradleVersion = '2.8'
}

configurations {
	integrationTestCompile.extendsFrom testCompile
	integrationTestRuntime.extendsFrom testRuntime
}
sourceSets {
	integrationTest {
		compileClasspath += main.output + test.output
		runtimeClasspath += main.output + test.output
	}
}

task integrationTest(type: Test) {
	testClassesDir = sourceSets.integrationTest.output.classesDir
	classpath = sourceSets.integrationTest.runtimeClasspath
	reports.html.destination = file("${reporting.baseDir}/integrationTests")
}